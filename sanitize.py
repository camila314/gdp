# makes things easier for me
import re

data = open("why.cpp", "r").read()

#data = data.replace(" "*8, " "*4)

#playerobject members
if data.startswith("PlayerObject"):
	data = data.replace("*(int8_t *)(this + 0x62b)", "m_unknown_62b")
	data = data.replace("*(int8_t *)(this + 0x62c)", "m_inPlayLayer")
	data = data.replace("*(int8_t *)(this + 0x732)", "m_hitPortal")
	data = data.replace("*(int8_t *)(this + 0x745)", "m_isHolding")
	data = data.replace("*(int8_t *)(this + 0x769)", "m_onSlope2")
	data = data.replace("*(int8_t *)(this + 0x770)", "m_isShip")
	data = data.replace("*(int8_t *)(this + 0x771)", "m_isBird")
	data = data.replace("*(int8_t *)(this + 0x772)", "m_isBall")
	data = data.replace("*(int8_t *)(this + 0x773)", "m_isDart")
	data = data.replace("*(int8_t *)(this + 0x774)", "m_isRobot")
	data = data.replace("*(int8_t *)(this + 0x775)", "m_isSpider")
	data = data.replace("*(int8_t *)(this + 0x776)", "m_upsideDown")
	data = data.replace("*(int8_t *)(this + 0x778)", "m_onGround")
	data = data.replace("*(int8_t *)(this + 0x779)", "m_isDashing")
	data = data.replace("*(int8_t *)(this + 0x7a0)", "m_isSliding")
	data = data.replace("*(int8_t *)(this + 0x7a1)", "m_isRising")
	data = data.replace("*(int32_t *)(this + 0x77c)", "m_vehicleSize")
	data = data.replace("*(int32_t *)(this + 0x780)", "m_playerSpeedMultiplier")
	data = data.replace("*(int32_t *)(this + 0x584)", "m_collidedUUID")
	data = data.replace("*(this + 0x608)", "m_playerSpeed")
	data = data.replace("*(this + 0x760)", "m_yAccel")
	data = data.replace("*(this + 0x6b0)", "m_spiderSprite")
	data = data.replace("*(this + 0x6a8)", "m_robotSprite")
	data = data.replace("*(this + 0x7b8)", "m_lastPortal")
	data = data.replace("*(int32_t *)(this + 0x76c)", "m_slopeRotation")
	data = data.replace("*(this + 0x570)", "m_collidedSlopeObj")
	data = data.replace("this + 0x78c", "m_lastPortalLocation")
	data = data.replace("this + 0x7a4", "m_lastHitGround")
if data.startswith("GameObject") or data.startswith("EffectGameObject"):
	data = data.replace("*(this + 0x410)", "m_mainColor")
	data = data.replace("*(int8_t *)(this + 0x279)", "m_inEditorMode")
	data = data.replace("*(this + 0x350)", "m_hasDetailChannel")
	data = data.replace("*(int32_t *)(this + 0x428)", "m_zLayer")
	data = data.replace("*(int32_t *)(this + 0x3b4)", "m_batchLayer")
	data = data.replace("*(int8_t *)(this + 0x2e4)", "m_modifierBlock")
	data = data.replace("*(int32_t *)(this + 0x3c4)", "m_objectID")
	data = data.replace("*(int8_t *)(this + 0x347)", "m_shouldBlendMain")
	data = data.replace("*(this + 0x418)", "m_detailColor")
	data = data.replace("*(int8_t *)(this + 0x348)", "m_shouldBlendDetail")
	data = data.replace("*(int32_t *)(this + 0x424)", "m_defaultZLayer")
	data = data.replace("*(int8_t *)(this + 0x3d8)", "m_effectSheet")
	data = data.replace("*(int32_t *)(this + 0x42c)", "m_zOrder")
	data = data.replace("*(int32_t *)(this + 0x3c0)", "m_scale")
	data = data.replace("*(int32_t *)(this + 0x2dc)", "m_objectSize")
	data = data.replace("*(int32_t *)(this + 0x2e0)", "m_objectSize.height")
	data = data.replace("*(int8_t *)(this + 0x330)", "m_objectRectDirty")
	data = data.replace("*(int8_t *)(this + 0x2b8)", "m_usesOrientedBox")
	data = data.replace("*(int8_t *)(this + 0x2b0)", "m_orientedBox")
	data = data.replace("*(int8_t *)(this + 0x360)", "m_onSide")
if data.startswith("PlayLayer"):
	data = data.replace("*(int8_t *)(this + 0x4dc)", "m_debugPauseOff")
	data = data.replace("*(int8_t *)(this + 0x4dd)", "m_shouldSmoothCamera")
	data = data.replace("*(int8_t *)(this + 0x769)", "m_hasLevelCompleteMenu")
	data = data.replace("*(int8_t *)(this + 0x76a)", "m_hasCompletedLevel")
	data = data.replace("*(int32_t *)(this + 0x4d0)", "m_dontSaveRand")
	data = data.replace("*(int32_t *)(this + 0x4d4)", "m_dontSaveSeed")
	data = data.replace("*(int32_t *)(this + 0x4f0)", "m_camera4f0")
	data = data.replace("*(int32_t *)(this + 0x4fc)", "m_groundRestriction")
	data = data.replace("*(int32_t *)(this + 0x500)", "m_ceilRestriction")
	data = data.replace("*(int8_t *)(this + 0x504)", "m_fullReset")
	data = data.replace("*(this + 0x520)", "m_startPos")
	data = data.replace("*(this + 0x528)", "m_startPosCheckpoint")
	data = data.replace("*(this + 0x538)", "m_checkpoints")
	data = data.replace("*(this + 0x598)", "m_particleSystem")
	data = data.replace("*(this + 0x5a0)", "m_pickedUpItems")
	data = data.replace("*(this + 0x5b8)", "m_audioEffectsLayer")
	data = data.replace("*(this + 0x5c8)", "m_bottomGround")
	data = data.replace("*(this + 0x5d0)", "m_topGround")
	data = data.replace("*(this + 0x5f0)", "m_lockGroundToCamera")
	data = data.replace("*(int8_t *)(this + 0x5e0)", "m_isDead")
	data = data.replace("*(int8_t *)(this + 0x5e1)", "m_startCameraAtCorner")
	data = data.replace("*(int8_t *)(this + 0x5e2)", "m_cameraYLocked")
	data = data.replace("*(int8_t *)(this + 0x5e3)", "m_cameraXLocked")
	data = data.replace("*(int8_t *)(this + 0x610)", "m_isCameraShaking")
	data = data.replace("*(int32_t *)(this + 0x618)", "m_currentShakeInterval")
	data = data.replace("*(this + 0x620)", "m_lastShakeTime")
	data = data.replace("*(this + 0x628)", "m_cameraShakeOffset")
	data = data.replace("*(this + 0x634)", "m_backgroundScrollOffset")
	data = data.replace("*(int32_t *)(this + 0x688)", "m_activeGravityEffects")
	data = data.replace("*(this + 0x6a0)", "m_previousRecords")
	data = data.replace("*(this + 0x6b0)", "m_time")
	data = data.replace("*(this + 0x708)", "m_latestVehicle")
	data = data.replace("*(this + 0x710)", "m_dualObject")
	data = data.replace("*(int8_t *)(this + 0x718)", "m_isFlipped")
	data = data.replace("*(int32_t *)(this + 0x71c)", "m_mirrorTransition")
	data = data.replace("*(this + 0x720)", "m_UILayer")
	data = data.replace("*(this + 0x728)", "m_level")
	data = data.replace("*(int8_t *)(this + 0x738)", "m_isTestMode")
	data = data.replace("*(int8_t *)(this + 0x739)", "m_isPracticeMode")
	data = data.replace("*(int8_t *)(this + 0x7dc)", "m_hasGlitter")
	data = data.replace("*(this + 0x7e0)", "m_antiCheatObject")
	data = data.replace("*(int8_t *)(this + 0x7e8)", "m_antiCheatPassed")
	data = data.replace("*(int32_t*)(this + 0x5f8)", "m_levelLength")

	# gjbl
	data = data.replace("*(int8_t *)(this + 0x490)", "m_activeDualTouch")
	data = data.replace("*(this + 0x180)", "m_effectManager")
	data = data.replace("*(this + 0x3a0)", "m_objects")
	data = data.replace("*(this + 0x380)", "m_player1")
	data = data.replace("*(this + 0x388)", "m_player2")
	data = data.replace("*(this + 0x390)", "m_levelSettings")
	data = data.replace("*(this + 0x3a8)", "m_sectionObjects")
	data = data.replace("*(int8_t *)(this + 0x489)", "m_isDualMode")
	data = data.replace("*(int8_t *)(this + 0x490)", "m_activeDualTouch")
	data = data.replace("*(int32_t *)(this + 0x494)", "m_attemptClickCount")
	data = data.replace("*(int32_t *)(this + 0x498)", "m_lastVisibleSection")
	data = data.replace("*(int32_t *)(this + 0x49c)", "m_firstVisibleSection")
if data.startswith("EffectGameObject"):
	data = data.replace("*(int8_t *)(this + 0x594)", "m_multiTrigger")
	data = data.replace("*(int32_t *)(this + 0x4f0)", "m_duration")
	data = data.replace("*(int32_t *)(this + 0x4f4)", "m_opacity")
	data = data.replace("*(int32_t *)(this + 0x4f8)", "m_targetGroupID")
	data = data.replace("*(int32_t *)(this + 0x4fc)", "m_centerGroupID")
	data = data.replace("*(int32_t *)(this + 0x500)", "m_shakeStrength")
	data = data.replace("*(int32_t *)(this + 0x504)", "m_shakeInterval")
	data = data.replace("*(int8_t *)(this + 0x508)", "m_tintGround")
	data = data.replace("*(int8_t *)(this + 0x509)", "m_playerColor1")
	data = data.replace("*(int8_t *)(this + 0x50a)", "m_playerColor2")
	data = data.replace("*(int8_t *)(this + 0x50b)", "m_blending")
	data = data.replace("this + 0x50c", "m_move")
	data = data.replace("*(int32_t *)(this + 0x514)", "m_easingType")
	data = data.replace("*(int32_t *)(this + 0x518)", "m_easingRate")
	data = data.replace("*(int8_t *)(this + 0x51c)", "m_lockToPlayerX")
	data = data.replace("*(int8_t *)(this + 0x51d)", "m_lockToPlayerY")
	data = data.replace("*(int8_t *)(this + 0x51e)", "m_useTarget")
	data = data.replace("*(int32_t *)(this + 0x520)", "m_moveTargetType")
	data = data.replace("*(int32_t *)(this + 0x524)", "m_rotateDegrees")
	data = data.replace("*(int32_t *)(this + 0x528)", "m_times360")
	data = data.replace("*(int8_t *)(this + 0x52c)", "m_lockObjectRotation")
	data = data.replace("this + 0x530", "m_followMod")
	data = data.replace("*(int8_t *)(this + 0x538)", "m_UndocuementedLevelProperty74")
	data = data.replace("*(int32_t *)(this + 0x53c)", "m_followYSpeed")
	data = data.replace("*(int32_t *)(this + 0x540)", "m_followYDelay")
	data = data.replace("*(int32_t *)(this + 0x544)", "m_followYOffset")
	data = data.replace("*(int32_t *)(this + 0x548)", "m_followYMaxSpeed")
	data = data.replace("*(int32_t *)(this + 0x54c)", "m_fadeInTime")
	data = data.replace("*(int32_t *)(this + 0x550)", "m_holdTime")
	data = data.replace("*(int32_t *)(this + 0x554)", "m_fadeOutTime")
	data = data.replace("*(int32_t *)(this + 0x558)", "m_pulseHSVMode")
	data = data.replace("*(int32_t *)(this + 0x55c)", "m_pulseGroupMode")
	data = data.replace("this + 0x560", "m_HSVValue")
	data = data.replace("*(int32_t *)(this + 0x570)", "m_copyColorID")
	data = data.replace("*(int8_t *)(this + 0x574)", "m_copyOpacity")
	data = data.replace("*(int8_t *)(this + 0x575)", "m_pulseMainOnly")
	data = data.replace("*(int8_t *)(this + 0x576)", "m_pulseDetailOnly")
	data = data.replace("*(int8_t *)(this + 0x577)", "m_pulseExclusive")
	data = data.replace("*(int8_t *)(this + 0x578)", "m_activateGroup")
	data = data.replace("*(int8_t *)(this + 0x579)", "m_touchHoldMode")
	data = data.replace("*(int32_t *)(this + 0x57c)", "m_touchToggleMode")
	data = data.replace("*(int8_t *)(this + 0x580)", "m_touchDualMode")
	data = data.replace("*(int32_t *)(this + 0x584)", "m_animationID")
	data = data.replace("*(int32_t *)(this + 0x588)", "m_spawnDelay")
	data = data.replace("this + 0x58c", "m_spawnPosition")
	data = data.replace("*(int8_t *)(this + 0x594)", "m_multiTrigger")
	data = data.replace("*(int8_t *)(this + 0x595)", "m_editorDisabled")
	data = data.replace("*(int32_t *)(this + 0x598)", "m_targetCount")
	data = data.replace("*(int8_t *)(this + 0x59c)", "m_subtractCount")
	data = data.replace("*(int32_t *)(this + 0x5a0)", "m_comparisonType")
	data = data.replace("*(int8_t *)(this + 0x5a4)", "m_multiActivate")
	data = data.replace("*(int8_t *)(this + 0x5a5)", "m_triggerOnExit")
	data = data.replace("*(int32_t *)(this + 0x5a8)", "m_blockBID")
	data = data.replace("*(int8_t *)(this + 0x5ac)", "m_dynamicBlock")
	data = data.replace("*(int32_t *)(this + 0x5b0)", "m_targetItemID")
	data = data.replace("*(int32_t *)(this + 0x5b4)", "m_pickupMode")

#314

data = data.replace("*(int32_t *)value ","")
data = data.replace("*(GameManager::sharedState() + 0x180)", "PL")
data = data.replace("*(GameManager::sharedState() + 0x188)", "LEL")
data = data.replace("*(int8_t *)(GameManager::sharedState() + 0x2a1)", "GM->m_ldm")
data = data.replace("std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string", "std::string")
data = re.sub(r"intrinsic_movs[sd]\(\w+, (.+)\);", r"\1;", data)
data = re.sub(r"= intrinsic_adds[sd]\((\w+), (.+)\);", r"+= \2;", data)
data = re.sub(r"= intrinsic_subs[sd]\((\w+), (.+)\);", r"-= \2;", data)
data = re.sub(r"= intrinsic_muls[sd]\((\w+), (.+)\);", r"*= \2;", data)
data = re.sub(r"(\w+) == 0x0 \? 0x1 : 0x0", r"!\1", data)
data = re.sub(r"}\n\s+else", r"} else", data)
data = data.replace("(*(rax + 0x4f8))", "GameObject::getObjectRect")
data = data.replace("(*(rax + 0x200))", "CCNode::removeFromParentAndCleanup")
data = data.replace("(*(*this + 0xc0))", "this->getPosition")
data = data.replace("(*(rax + 0xb8))", "CCNode::setPosition")
data = data.replace("(*(*this + 0x1f0))(this)", "this->getParent()")
print(data)